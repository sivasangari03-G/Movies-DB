Q: find all movies which are equal to movie_name
A: db.movies.find({movie_name: "Pandora's Box"}).pretty()

Q: find all movies which are not equal to movie_name
A: db.movies.find({movie_name: "Pandora's Box"}).pretty()

Q: find all movies greater than and greater than equal to a budget
A: db.movies.find({$and: [{budget: {$gt : 11755}},{budget: {$gte: 11755}}]}).pretty()

Q: find all movies less than and less than equal to a budget
A: db.movies.find({$and: [{budget: {$lt : 11755}},{budget: {$lte: 11755}}]}).pretty()

Q: find all movies that are produced after 2000 with budget greater than 10000
A: db.movies.find({$and: [{production_year: {$gt : 2000}},{budget: {$gt: 10000}}]}).pretty()

Q: find all movies that are neither produced after 2000 nor with budget greater than 10000.
A: db.movies.find({$nor: [{production_year: {$gt : 2000}},{budget: {$gt: 10000}}]}).pretty()

Q: find all movies that are not produced in 2000 or they do not have budget of 10000
A: db.movies.find({$and: [{production_year: {$ne: 2000}},{budget: {$ne: 10000}}]}).pretty()

Q: find all movies that were produced from 2000 to 2010.
A: db.movies.find({$and: [{production_year: {$gte : 2000}},{production_year: {$lte: 2010}}]}).pretty()

Q: Sort all movies descending based on the production year and if the year is same then alphabetically for their movie_names
A: db.movies.find({$and: [{production_year: {$gte : 2000}},{production_year: {$lte: 2010}}]}).pretty()

Q: in query 10 skip the first 10 entries and fetch the next 5.
A: db.movies.find({$and: [{production_year: {$gte : 2000}},{production_year: {$lte: 2010}}]}).pretty()

Q: remove movie genre from the first 10 movies in query 10.
A: db.movies.find({},{movie_genre: 0}).sort({production_year: -1, movies_name: 1}).limit(10).pretty()